<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">  
  <link name="pointcloud_link">
  </link>

  <joint name="pointcloud_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.07375 0.0 0.005"/>
    <parent link="chassis2"/>
    <child link="pointcloud_link"/>
    <axis xyz="0 0 0"/>
  </joint>
  <gazebo reference="pointcloud_link">
      <sensor type="ray" name="pointcloud_sensor">
          <ray>
          <scan>
              <horizontal>
                  <samples>50</samples>box_bot_blue
                  <resolution>1.0</resolution>
                  <min_angle>-1.0</min_angle>
                  <max_angle>1.0</max_angle>
              </horizontal>
              <vertical>
                  <samples>50</samples>
                  <resolution>1.0</resolution>
                  <min_angle>-1.0</min_angle>
                  <max_angle>1.0</max_angle>
              </vertical>
          </scan>
          <range>
              <min>0.10</min>
              <max>5.0</max>
              <resolution>0.01</resolution>
          </range>
          <!-- Using gazebo's noise instead of plugin's -->
          <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.01</stddev>
          </noise>
          </ray>
          <!-- Using gazebo's update rate instead of plugin's -->
          <update_rate>30</update_rate>
          <plugin name="gazebo_ros_block_laser_controller" filename="libgazebo_ros_ray_sensor.so">
          <!-- Change namespace and output topic so published topic is /rrbot/laser/pointcloud -->
          <ros>
              <namespace>ros2_urdf_project</namespace>
              <argument>~/out:=pointcloud</argument>
          </ros>
          <!-- Set output to sensor_msgs/PointCloud to get same output type as gazebo_ros_block_laser -->
          <output_type>sensor_msgs/PointCloud</output_type>
          <frame_name>pointcloud_link</frame_name>

          <!-- min_intensity instead of hokuyoMinIntensity -->
          <min_intensity>100.0</min_intensity>
          </plugin>
      </sensor>
  </gazebo>

  <!-- RGB CAMERA -->
  <link name="rgb_camera_link_frame">
    <inertial>
      <mass value="0.010"/>
      <inertia ixx="1.5e-06" ixy="0" ixz="0" iyy="7.708333333333333e-07" iyz="0" izz="7.708333333333333e-07"/>
    </inertial>
    <visual>
      <geometry>
        <box size="0.005 0.030 0.030"/>
      </geometry>
      <material name="green_dark"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.005 0.030 0.030"/>
      </geometry>
    </collision>
  </link>

  <joint name="rgb_camera_link_frame_joint" type="fixed">
      <origin rpy="0 0 0" xyz="0.07375 0.0 0.005"/>
      <parent link="chassis2" />
      <child link="rgb_camera_link_frame" />
      <axis xyz="0 0 0"/>
  </joint>

    <gazebo reference="rgb_camera_link_frame">
        <sensor name="camera" type="wideanglecamera">
            <camera>
            <horizontal_fov>6.283</horizontal_fov>
            <image>
                <width>320</width>
                <height>240</height>
            </image>
            <clip>
                <near>0.1</near>
                <far>100</far>
            </clip>
            <lens>
                <type>custom</type>
                <custom_function>
                <c1>1.05</c1>
                <c2>4</c2>
                <f>1.0</f>
                <fun>tan</fun>
                </custom_function>
                <scale_to_hfov>true</scale_to_hfov>
                <cutoff_angle>3.1415</cutoff_angle>
                <env_texture_size>512</env_texture_size>
            </lens>
            <always_on>1</always_on>
            <update_rate>30</update_rate>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <cameraName>rgb_camera</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>rgb_camera_link_frame</frameName>
            <hackBaseline>0.07</hackBaseline>
            </plugin>
        </sensor>
    </gazebo>
</robot>